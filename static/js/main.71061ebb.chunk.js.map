{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodoItem","state","props","toggleChecked","setState","prev","completed","this","title","id","className","type","onChange","htmlFor","React","Component","TodoList","todos","map","todo","key","TodoApp","newTodoTitle","handleTodoTitle","event","target","value","trim","handleFormSubmit","preventDefault","newTodo","Date","onSubmit","placeholder","length","href","App","ReactDOM","render","document","getElementById"],"mappings":"oQA0CeA,E,4MAtCbC,M,eACK,EAAKC,O,EAGVC,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAI,kCACbA,GADa,IAEhBC,WAAYD,EAAKC,gB,uDAIX,IAAD,EAC0BC,KAAKN,MAA9BO,EADD,EACCA,MAAOC,EADR,EACQA,GAAIH,EADZ,EACYA,UAEnB,OACE,wBACEI,UACEJ,EACI,YACA,QAGN,6BACE,2BACEK,KAAK,WACLD,UAAU,SACVD,GAAIA,EACJG,SAAUL,KAAKJ,gBAEjB,2BAAOU,QAASJ,GAAKD,GACrB,4BAAQG,KAAK,SAASD,UAAU,aAElC,2BAAOC,KAAK,OAAOD,UAAU,c,GAjCdI,IAAMC,WCcdC,EAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,wBAAIP,UAAU,aACXO,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAKV,GACVD,MAAOW,EAAKX,MACZC,GAAIU,EAAKV,GACTH,UAAWa,EAAKb,iBC0FTe,E,4MAjGbpB,MAAQ,CACNgB,MAAO,CACL,CACET,MAAO,SACPC,GAAI,EACJH,WAAW,GAEb,CACEE,MAAO,SACPC,GAAI,EACJH,WAAW,GAEb,CACEE,MAAO,QACPC,GAAI,EACJH,WAAW,IAIfgB,aAAc,I,EAGhBC,gBAAkB,SAACC,GACjB,EAAKpB,SAAS,CACZkB,aAAcE,EAAMC,OAAOC,MAAMC,U,EAIrCC,iBAAmB,SAACJ,GAClBA,EAAMK,iBAEN,EAAKzB,UAAS,SAACC,GACb,IAAMyB,EAAU,CACdrB,IAAK,IAAIsB,KACTvB,MAAOH,EAAKiB,aACZhB,WAAW,GAGb,MAAO,CACLW,MAAM,GAAD,mBAAMZ,EAAKY,OAAX,CAAkBa,S,uDAM3B,OACE,6BAASpB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,0BACEsB,SAAUzB,KAAKqB,kBAEf,2BACEjB,KAAK,OACLD,UAAU,WACVuB,YAAY,yBACZrB,SAAUL,KAAKgB,oBAKrB,6BAASb,UAAU,QACjB,2BAAOC,KAAK,WAAWF,GAAG,aAAaC,UAAU,eACjD,2BAAOG,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CAAUI,MAAOV,KAAKN,MAAMgB,SAG9B,4BAAQP,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMH,KAAKN,MAAMgB,MAAMiB,OADvB,gBAIA,wBAAIxB,UAAU,WACZ,4BACE,uBAAGyB,KAAK,KAAKzB,UAAU,YAAvB,QAGF,4BACE,uBAAGyB,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQxB,KAAK,SAASD,UAAU,mBAAhC,yB,GAzFYI,IAAMC,WCMbqB,MANf,WACE,OACE,kBAAC,EAAD,OCCJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.71061ebb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  state = {\n    ...this.props,\n  }\n\n  toggleChecked = () => {\n    this.setState(prev => ({\n      ...prev,\n      completed: !prev.completed,\n    }));\n  }\n\n  render() {\n    const { title, id, completed } = this.state;\n\n    return (\n      <li\n        className={\n          completed\n            ? 'completed'\n            : 'view'\n        }\n      >\n        <div>\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={id}\n            onChange={this.toggleChecked}\n          />\n          <label htmlFor={id}>{title}</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n\nTodoItem.propTypes = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        title={todo.title}\n        id={todo.id}\n        completed={todo.completed}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport TodoList from '../TodoList/TodoList';\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [\n      {\n        title: 'qwerty',\n        id: 1,\n        completed: false,\n      },\n      {\n        title: 'asdfgh',\n        id: 2,\n        completed: false,\n      },\n      {\n        title: 'zxcvb',\n        id: 3,\n        completed: false,\n      },\n    ],\n\n    newTodoTitle: '',\n  }\n\n  handleTodoTitle = (event) => {\n    this.setState({\n      newTodoTitle: event.target.value.trim(),\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((prev) => {\n      const newTodo = {\n        id: +new Date(),\n        title: prev.newTodoTitle,\n        completed: false,\n      };\n\n      return {\n        todos: [...prev.todos, newTodo],\n      };\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form\n            onSubmit={this.handleFormSubmit}\n          >\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleTodoTitle}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList todos={this.state.todos} />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${this.state.todos.length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}