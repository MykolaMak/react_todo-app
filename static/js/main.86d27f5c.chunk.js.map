{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodoItem","this","props","title","id","completed","toggleChecked","destroyItem","className","type","checked","onChange","htmlFor","onClick","React","PureComponent","TodoList","todos","map","todo","key","TodoApp","state","newTodoTitle","filterForTodos","handleFilterForTodos","event","filter","target","innerText","setState","handleTodoTitle","value","trim","handleFormSubmit","preventDefault","prev","newTodo","Date","todoId","toggleAllTodos","countOfcompletedTodos","length","destoyCompletedItems","onSubmit","placeholder","href","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86d27f5c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.PureComponent {\n  render() {\n    const { title, id, completed, toggleChecked, destroyItem } = this.props;\n\n    return (\n      <li\n        className={\n          completed\n            ? 'completed'\n            : 'view'\n        }\n      >\n        <div>\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={id}\n            checked={completed}\n            onChange={() => toggleChecked(id)}\n          />\n          <label htmlFor={id}>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => destroyItem(id)}\n          />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n\nTodoItem.propTypes = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  toggleChecked: PropTypes.func.isRequired,\n  destroyItem: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos, toggleChecked, destroyItem }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        title={todo.title}\n        id={todo.id}\n        completed={todo.completed}\n        toggleChecked={toggleChecked}\n        destroyItem={destroyItem}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  toggleChecked: PropTypes.func.isRequired,\n  destroyItem: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport TodoList from '../TodoList/TodoList';\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    newTodoTitle: '',\n    filterForTodos: 'All',\n  }\n\n  handleFilterForTodos = (event) => {\n    const filter = event.target.innerText;\n\n    this.setState({\n      filterForTodos: filter,\n    });\n  }\n\n  handleTodoTitle = (event) => {\n    this.setState({\n      newTodoTitle: event.target.value.trim(),\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((prev) => {\n      const newTodo = {\n        id: +new Date(),\n        title: prev.newTodoTitle,\n        completed: false,\n      };\n\n      return {\n        todos: [...prev.todos, newTodo],\n      };\n    });\n  };\n\n  toggleChecked = (todoId) => {\n    this.setState(prev => ({\n      todos: prev.todos.map((todo) => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return {\n          ...todo,\n        };\n      }),\n    }));\n  }\n\n  toggleAllTodos = () => {\n    const countOfcompletedTodos = this.state.todos\n      .filter(todo => todo.completed).length;\n\n    if (countOfcompletedTodos === 0) {\n      this.setState(prev => ({\n        todos: prev.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      }));\n    }\n\n    if (countOfcompletedTodos !== this.state.todos.length) {\n      this.setState(prev => ({\n        todos: prev.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n      }));\n    }\n\n    this.setState(prev => ({\n      todos: prev.todos.map(todo => ({\n        ...todo,\n        completed: !todo.completed,\n      })),\n    }));\n  }\n\n  destroyItem = (todoId) => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(todo => todo.id !== todoId),\n    }));\n  }\n\n  destoyCompletedItems = () => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    let todos = [...this.state.todos];\n    const { filterForTodos } = this.state;\n\n    if (filterForTodos === 'Active') {\n      todos = this.state.todos.filter(todo => !todo.completed);\n    }\n\n    if (filterForTodos === 'Completed') {\n      todos = this.state.todos.filter(todo => todo.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form\n            onSubmit={this.handleFormSubmit}\n          >\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleTodoTitle}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.toggleAllTodos}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={todos}\n            toggleChecked={this.toggleChecked}\n            destroyItem={this.destroyItem}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${this.state.todos\n              .filter(todo => !todo.completed).length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/all\"\n                className=\"selected\"\n                onClick={this.handleFilterForTodos}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a href=\"#/active\" onClick={this.handleFilterForTodos}>Active</a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                onClick={this.handleFilterForTodos}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n          {this.state.todos.filter(todo => todo.completed).length > 0\n            ? (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={this.destoyCompletedItems}\n              >\n                Clear completed\n              </button>\n            )\n            : ''\n          }\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}